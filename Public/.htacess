# Specify PHP Version
# Set PHP 8.3 as the version to handle .php files
AddHandler application/x-httpd-php83 .php

# Force HTTPS if accessed via HTTP
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# URL Rewriting and Redirection
# Enable Apache's Rewrite Engine to support URL rewriting
RewriteBase /

# Redirect all non-existent file and directory requests to index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ index.php [QSA,L]

# Explanation:
# - RewriteCond %{REQUEST_FILENAME} !-f: If the requested file does not exist.
# - RewriteCond %{REQUEST_FILENAME} !-d: If the requested directory does not exist.
# - RewriteRule ^ index.php: Redirect everything to index.php.
# - [QSA]: Query string append; ensures the query string in the original request is added to the new URL.
# - [L]: Last rule, meaning no further rewrite rules will be applied.

# Security Headers
<IfModule mod_headers.c>
	# Prevent MIME type sniffing to mitigate certain attacks
	Header always set X-Content-Type-Options "nosniff"

	# Enable XSS protection
	Header always set X-XSS-Protection "1; mode=block"

	# Prevent clickjacking attacks by denying the page to be loaded in an iframe
	Header always set X-Frame-Options "DENY"

	# Enable HTTP Strict Transport Security (HSTS) for SSL sites
	Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>

# Security headers explained:
# - X-Content-Type-Options: Tells browsers to follow the MIME types set by the server, avoiding content-type sniffing.
# - X-XSS-Protection: Instructs the browser to enable built-in XSS protection.
# - X-Frame-Options: Protects the site from being embedded in an iframe, preventing clickjacking attacks.
# - Strict-Transport-Security: Forces browsers to connect only via HTTPS for the domain.

# Deny Access to Sensitive Files

# Block external access to the .htaccess file itself
<Files .htaccess>
	Require all denied
</Files>

# Deny access to the .env file (commonly used for environment variables)
<Files .env>
	Require all denied
</Files>

# Deny access to composer files (composer.json and composer.lock)
<FilesMatch "^composer\.(json|lock)$">
	Require all denied
</FilesMatch>

# File access restriction explained:
# - <Files .htaccess>: Blocks access to the .htaccess file itself for added security.
# - <Files .env>: Denies access to the .env file, which typically contains sensitive environment variables.
# - <FilesMatch "^composer\.(json|lock)$">: Matches and blocks access to the composer.json and composer.lock files to prevent exposing dependency information.

# Directory Listing Protection
Options -Indexes

# Enable cache control headers for static assets to improve performance
<IfModule mod_expires.c>
	ExpiresActive On
	ExpiresByType image/jpg "access plus 1 year"
	ExpiresByType image/jpeg "access plus 1 year"
	ExpiresByType image/gif "access plus 1 year"
	ExpiresByType image/png "access plus 1 year"
	ExpiresByType text/css "access plus 1 month"
	ExpiresByType application/pdf "access plus 1 month"
	ExpiresByType text/javascript "access plus 1 month"
	ExpiresByType application/javascript "access plus 1 month"
	ExpiresByType application/x-javascript "access plus 1 month"
	ExpiresByType application/x-shockwave-flash "access plus 1 month"
	ExpiresByType image/x-icon "access plus 1 year"
	ExpiresDefault "access plus 2 days"
</IfModule>
